# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from nuance.nlu.v1beta1 import runtime_pb2 as nuance_dot_nlu_dot_v1beta1_dot_runtime__pb2


class NluStub(object):
  """
  Interpretation service API.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Interpret = channel.unary_unary(
        '/nuance.nlu.v1beta1.Nlu/Interpret',
        request_serializer=nuance_dot_nlu_dot_v1beta1_dot_runtime__pb2.InterpretRequest.SerializeToString,
        response_deserializer=nuance_dot_nlu_dot_v1beta1_dot_runtime__pb2.InterpretResponse.FromString,
        )


class NluServicer(object):
  """
  Interpretation service API.
  """

  def Interpret(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_NluServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Interpret': grpc.unary_unary_rpc_method_handler(
          servicer.Interpret,
          request_deserializer=nuance_dot_nlu_dot_v1beta1_dot_runtime__pb2.InterpretRequest.FromString,
          response_serializer=nuance_dot_nlu_dot_v1beta1_dot_runtime__pb2.InterpretResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'nuance.nlu.v1beta1.Nlu', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
