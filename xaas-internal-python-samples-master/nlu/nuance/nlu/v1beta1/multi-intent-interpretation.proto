syntax = "proto3";

package nuance.nlu.v1beta1;

option java_multiple_files = false;
option java_package = "com.nuance.grpc.nlu.v1beta1";

import "nuance/nlu/v1beta1/interpretation-common.proto";
import "google/protobuf/struct.proto";

/*
 * Multi-intent interpretation. Used for semantic models trained with multiple intents. Contains a tree of nodes
 * representing the detected operators, intents, and entities and their associations.
 */
message MultiIntentInterpretation {
    InterpretationNode root = 1; // Root node of the interpretation tree. Can be an operator or an intent.
}

/*
 * Node in the interpretation tree.  Can be either an operator node, an intent node, or an entity node.
 */
message InterpretationNode {
    oneof interpretation_node_union {
        OperatorNode operator = 1;
        IntentNode intent = 2;
        EntityNode entity = 3;
    }
}

/*
 * Node that represents a logical operator (i.e., AND, OR, or NOT)
 */
message OperatorNode {
    EnumOperator operator = 1; // Type of operator
    TextRange text_range = 2; // Range of literal text for which this operator applies.
    repeated InterpretationNode children = 5; // Child nodes for this operator. An operator node always has children.

    AudioRange audio_range = 15; // Range of audio input for which this operator applies.  Only specified when interpreting recognition results.
}

/*
 * Logical operator type. One of AND, OR, or NOT.
 */
enum EnumOperator {
    AND = 0;
    OR = 1;
    NOT = 2;
}

message IntentNode {
    string name = 1; // Intent name, as it is found in the ontology used to train the semantic model.
    TextRange text_range = 2; // Range of literal text for which this intent applies.
    float confidence = 3; // Confidence score (between 0.0 and 1.0 inclusive). The higher the score, the likelier the detected intent is correct.
    EnumOrigin origin = 4; // Indicates how the intent was detected.
    repeated EntityNode children = 5; // Child nodes for this intent. An intent node can only have entity nodes as children but does not always have children.

    AudioRange audio_range = 15; // Range of audio input for which this intent applies. Only specified when interpreting recognition results.
}

message EntityNode {
    string name = 1; // Entity name, as it is found in the ontology used to train the semantic model.
    TextRange text_range = 2; // Range of literal text for which this entity applies.
    float confidence = 3; // Confidence score (between 0.0 and 1.0 inclusive). The higher the score, the likelier the detected intent is correct.
    EnumOrigin origin = 4; // Indicates how the entity was detected.
    repeated EntityNode children = 5; // Child nodes for this entity.  A hierarchical entity node can have child entity nodes.

    oneof value_union {
        string string_value = 6;
        google.protobuf.Struct struct_value = 7;
    }

    AudioRange audio_range = 15; // Range of audio input for which this entity applies. Only specified when interpreting recognition results.
}
